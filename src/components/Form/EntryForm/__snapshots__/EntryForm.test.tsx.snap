// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login form component should render login form component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EntryForm
    Edit={false}
    date="string"
    diaryBody="string"
    diaryTitle="string"
    onCancel={[MockFunction]}
    onChange={[MockFunction]}
    onSubmit={[MockFunction]}
    title="string"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        action=""
      >
        <h1>
          string
        </h1>
        <Input
          label="Entry Title *"
          name="diaryTitle"
          onChange={[MockFunction]}
          type="text"
          value="string"
        />
        <Input
          label="Entry Date *"
          name="date"
          onChange={[MockFunction]}
          type="date"
          value="string"
        />
        <InputBox
          invisible={false}
          isDisabled={false}
          label="Diary Body *"
          name="diaryEntryBody"
          onChange={[MockFunction]}
          showTextOnError={true}
          textarea={true}
          type="text"
          value="string"
        />
        <div
          className="EntryFormButtons"
        >
          <Button
            className="button"
            label="Submit"
            onClick={[Function]}
          />
          <a
            href="/home"
            id="cancelButton"
          >
            Cancel
          </a>
        </div>
      </form>,
      "className": "EntryForm",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "action": "",
        "children": Array [
          <h1>
            string
          </h1>,
          <Input
            label="Entry Title *"
            name="diaryTitle"
            onChange={[MockFunction]}
            type="text"
            value="string"
          />,
          <Input
            label="Entry Date *"
            name="date"
            onChange={[MockFunction]}
            type="date"
            value="string"
          />,
          <InputBox
            invisible={false}
            isDisabled={false}
            label="Diary Body *"
            name="diaryEntryBody"
            onChange={[MockFunction]}
            showTextOnError={true}
            textarea={true}
            type="text"
            value="string"
          />,
          <div
            className="EntryFormButtons"
          >
            <Button
              className="button"
              label="Submit"
              onClick={[Function]}
            />
            <a
              href="/home"
              id="cancelButton"
            >
              Cancel
            </a>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "string",
          },
          "ref": null,
          "rendered": "string",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "label": "Entry Title *",
            "name": "diaryTitle",
            "onChange": [MockFunction],
            "type": "text",
            "value": "string",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "label": "Entry Date *",
            "name": "date",
            "onChange": [MockFunction],
            "type": "date",
            "value": "string",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "invisible": false,
            "isDisabled": false,
            "label": "Diary Body *",
            "name": "diaryEntryBody",
            "onChange": [MockFunction],
            "showTextOnError": true,
            "textarea": true,
            "type": "text",
            "value": "string",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Button
                className="button"
                label="Submit"
                onClick={[Function]}
              />,
              <a
                href="/home"
                id="cancelButton"
              >
                Cancel
              </a>,
            ],
            "className": "EntryFormButtons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "button",
                "label": "Submit",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Cancel",
                "href": "/home",
                "id": "cancelButton",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": "a",
            },
          ],
          "type": "div",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          action=""
        >
          <h1>
            string
          </h1>
          <Input
            label="Entry Title *"
            name="diaryTitle"
            onChange={[MockFunction]}
            type="text"
            value="string"
          />
          <Input
            label="Entry Date *"
            name="date"
            onChange={[MockFunction]}
            type="date"
            value="string"
          />
          <InputBox
            invisible={false}
            isDisabled={false}
            label="Diary Body *"
            name="diaryEntryBody"
            onChange={[MockFunction]}
            showTextOnError={true}
            textarea={true}
            type="text"
            value="string"
          />
          <div
            className="EntryFormButtons"
          >
            <Button
              className="button"
              label="Submit"
              onClick={[Function]}
            />
            <a
              href="/home"
              id="cancelButton"
            >
              Cancel
            </a>
          </div>
        </form>,
        "className": "EntryForm",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "action": "",
          "children": Array [
            <h1>
              string
            </h1>,
            <Input
              label="Entry Title *"
              name="diaryTitle"
              onChange={[MockFunction]}
              type="text"
              value="string"
            />,
            <Input
              label="Entry Date *"
              name="date"
              onChange={[MockFunction]}
              type="date"
              value="string"
            />,
            <InputBox
              invisible={false}
              isDisabled={false}
              label="Diary Body *"
              name="diaryEntryBody"
              onChange={[MockFunction]}
              showTextOnError={true}
              textarea={true}
              type="text"
              value="string"
            />,
            <div
              className="EntryFormButtons"
            >
              <Button
                className="button"
                label="Submit"
                onClick={[Function]}
              />
              <a
                href="/home"
                id="cancelButton"
              >
                Cancel
              </a>
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "string",
            },
            "ref": null,
            "rendered": "string",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "label": "Entry Title *",
              "name": "diaryTitle",
              "onChange": [MockFunction],
              "type": "text",
              "value": "string",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "label": "Entry Date *",
              "name": "date",
              "onChange": [MockFunction],
              "type": "date",
              "value": "string",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "invisible": false,
              "isDisabled": false,
              "label": "Diary Body *",
              "name": "diaryEntryBody",
              "onChange": [MockFunction],
              "showTextOnError": true,
              "textarea": true,
              "type": "text",
              "value": "string",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Button
                  className="button"
                  label="Submit"
                  onClick={[Function]}
                />,
                <a
                  href="/home"
                  id="cancelButton"
                >
                  Cancel
                </a>,
              ],
              "className": "EntryFormButtons",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "button",
                  "label": "Submit",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Cancel",
                  "href": "/home",
                  "id": "cancelButton",
                },
                "ref": null,
                "rendered": "Cancel",
                "type": "a",
              },
            ],
            "type": "div",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
