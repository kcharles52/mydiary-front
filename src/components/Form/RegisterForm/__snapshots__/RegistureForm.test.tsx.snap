// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Register form componet Should render register form componet 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RegisterForm
    onChange={[MockFunction]}
    onSubmit={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "action": "",
      "children": Array [
        <h1>
          Register for an account
        </h1>,
        <Input
          label="Full Name *"
          name="name"
          onChange={[MockFunction]}
          type="text"
          value=""
        />,
        <Input
          label="Email Address *"
          name="email"
          onChange={[MockFunction]}
          type="text"
          value=""
        />,
        <Input
          label="Password *"
          name="password"
          onChange={[MockFunction]}
          type="password"
          value=""
        />,
        <Input
          label="Confirm Password *"
          name="ConfirmPassword"
          onChange={[MockFunction]}
          type="password"
          value=""
        />,
        <Button
          className="button button-block"
          label="Get started"
          onClick={[Function]}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Register for an account",
        },
        "ref": null,
        "rendered": "Register for an account",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "label": "Full Name *",
          "name": "name",
          "onChange": [MockFunction],
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "label": "Email Address *",
          "name": "email",
          "onChange": [MockFunction],
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "label": "Password *",
          "name": "password",
          "onChange": [MockFunction],
          "type": "password",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "label": "Confirm Password *",
          "name": "ConfirmPassword",
          "onChange": [MockFunction],
          "type": "password",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "className": "button button-block",
          "label": "Get started",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "action": "",
        "children": Array [
          <h1>
            Register for an account
          </h1>,
          <Input
            label="Full Name *"
            name="name"
            onChange={[MockFunction]}
            type="text"
            value=""
          />,
          <Input
            label="Email Address *"
            name="email"
            onChange={[MockFunction]}
            type="text"
            value=""
          />,
          <Input
            label="Password *"
            name="password"
            onChange={[MockFunction]}
            type="password"
            value=""
          />,
          <Input
            label="Confirm Password *"
            name="ConfirmPassword"
            onChange={[MockFunction]}
            type="password"
            value=""
          />,
          <Button
            className="button button-block"
            label="Get started"
            onClick={[Function]}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Register for an account",
          },
          "ref": null,
          "rendered": "Register for an account",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "label": "Full Name *",
            "name": "name",
            "onChange": [MockFunction],
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "label": "Email Address *",
            "name": "email",
            "onChange": [MockFunction],
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "label": "Password *",
            "name": "password",
            "onChange": [MockFunction],
            "type": "password",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "label": "Confirm Password *",
            "name": "ConfirmPassword",
            "onChange": [MockFunction],
            "type": "password",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "button button-block",
            "label": "Get started",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
